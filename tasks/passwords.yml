---

- name: 'Check if we can bind as admin'
  ldap_entry:
    bind_dn: 'cn=admin,{{slapd_base}}'
    bind_pw: '{{slapd_root_password}}'
    dn: '{{slapd_base}}'
    objectClass: top
  register: slapd_bind
  changed_when: false
  ignore_errors: yes

- name: Ensure pexpect is installed
  pip:
    name: pexpect

# for root password the following does not work:
# - name: Set ldap password via ldappasswd
#   expect:
#     command: 'ldappasswd -H ldapi:/// -Y EXTERNAL cn=admin,{{slapd_base}} -S'
#     responses:
#       'New password:': '{{slapd_root_password}}'
#       'Re-enter new password:': '{{slapd_root_password}}'
#   register: slapd_passwdchange
#   when: "slapd_bind|failed and slapd_bind.details == \"{'desc': 'Invalid credentials'}\""

- name: 'Encrypt LDAP password'
  expect:
    command: 'slappasswd'
    responses:
      'New password:': '{{slapd_root_password}}'
      'Re-enter new password:': '{{slapd_root_password}}'
  register: slappassw
  when: >
    slapd_bind|failed
    and slapd_bind.details == "{'desc': 'Invalid credentials'}"
  changed_when: false

- name: Set LDAP password in olcConfig
  ldap_attr:
    dn: olcDatabase={1}mdb,cn=config
    name: '{{item.key}}'
    values: '{{item.value}}'
    state: exact
  when: >
    slappasswd is defined
    and slapd_bind|failed
    and slapd_bind.details == "{'desc': 'Invalid credentials'}"
  with_dict:
    olcRootDN: 'cn=admin,{{slapd_base}}'
    # This line gets templated even if the conditional is false,
    # so we need to wrap it in a check to see if it's defined.
    # ThHis will never get reached since the task will be skipped
    # by the conditional in that case.
    olcRootPW: '{% if slappasswd is defined %}{{slappasswd.stdout_lines[-1]}}{%else%}This value should never be reached{%endif%}'

- name: 'Re-Check if we can bind as admin'
  ldap_entry:
    bind_dn: 'cn=admin,{{slapd_base}}'
    bind_pw: '{{slapd_root_password}}'
    dn: '{{slapd_base}}'
    objectClass: top
  register: slapd_bind
  changed_when: false
